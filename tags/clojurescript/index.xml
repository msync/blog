<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clojurescript on M&#39;Sync</title>
    <link>https://example.org/tags/clojurescript/</link>
    <description>Recent content in Clojurescript on M&#39;Sync</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Apr 2015 14:55:00 +0530</lastBuildDate><atom:link href="https://example.org/tags/clojurescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developing Chrome Extensions using Clojurescript</title>
      <link>https://example.org/blog/2015/2015-04-05-chrome-extensions-and-clojurescript/</link>
      <pubDate>Sun, 05 Apr 2015 14:55:00 +0530</pubDate>
      
      <guid>https://example.org/blog/2015/2015-04-05-chrome-extensions-and-clojurescript/</guid>
      
      <description>&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - Of course, you can use &lt;a href=&#34;http://clojure.org/clojurescript&#34;&gt;Clojurescript&lt;/a&gt; to develop &lt;a href=&#34;https://developer.chrome.com/extensions&#34;&gt;Chrome Extensions&lt;/a&gt;. So, that&amp;#39;s not the topic of this post.
I&amp;#39;ve only documented how you&amp;#39;d set up your project, using the latest versions (as of this post&amp;#39;s publishing)
of piggieback and weasel.&lt;/p&gt;
&lt;p&gt;
Why &lt;a href=&#34;https://github.com/tomjakubowski/weasel&#34;&gt;Weasel&lt;/a&gt;? Because, as its author explains&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A WebSocket transport is simple and avoids some of the thornier bugs caused by the CrossPageChannel transport, which is used in the standard ClojureScript browser REPL and Austin.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
